{"version":3,"file":"components-Toast-Toast-stories-mdx.f00ab196.iframe.bundle.js","mappings":";;;AAaA;;;;;;AAOA;AACA;;;;;;AAMA;AACA;;;;;AAKA;AACA;;;;AAIA;AAGA;AACA;;AAIA;AACA;;AAEA;;;;AAIA;AACA;;;;;;AAMA;AACA;;;;;AAKA;AACA;;;;AAIA;AAGA;AACA;;AAIA;AACA;;AAEA;;;;AAIA;AACA;;;;;;AAMA;AACA;;;;;AAKA;AACA;;;;AAIA;AAGA;AACA;;AAIA;AACA;;AAEA;;;;AAIA;AACA;;;;;;AAMA;AACA;;;;;AAKA;AACA;;;;AAIA;AAGA;AACA;;;AAOA;;;AAsBA;;;;;;ACjGA","sources":["webpack://@lokalise/louis/./src/components/IconButton/styles.ts","webpack://@lokalise/louis/./src/components/Toast/styles.ts"],"sourcesContent":["import { css, styled } from '../../utils/styled';\nimport { color, modifier, radius, spacing, transitionTime, variants } from '../../utils/theme';\nimport { Pressable } from '../Pressable';\nimport type { Appearance } from './IconButton';\n\ntype IconButtonProps = {\n\tappearance: Appearance;\n\tactive?: boolean;\n\tdisabled?: boolean;\n\tisLoading: boolean;\n};\n\nconst variantColorStyles = css`\n\t${variants('appearance', {\n\t\tprimary: css`\n\t\t\tpadding: 6px;\n\t\t\tfont-size: 20px;\n\n\t\t\t// hover\n\t\t\t&:hover:not([disabled]) {\n\t\t\t\tbackground-color: ${color('surface.primary100')};\n\t\t\t\tcolor: ${color(`primary.500`)};\n\t\t\t}\n\n\t\t\t// pressed\n\t\t\t&:active:not([disabled]),\n\t\t\t&:focus:active:not([disabled]) {\n\t\t\t\tbackground-color: ${color(`primary.200`)};\n\t\t\t\tcolor: ${color(`primary.500`)};\n\t\t\t}\n\n\t\t\t// focus\n\t\t\t&:focus:not([disabled]) {\n\t\t\t\tbackground-color: ${color(`surface.primary50`)};\n\t\t\t\tcolor: ${color(`primary.500`)};\n\t\t\t}\n\n\t\t\t// activated\n\t\t\t${modifier(\n\t\t\t\t'active',\n\t\t\t\tcss`\n\t\t\t\t\tbackground-color: ${color(`surface.primary50`)};\n\t\t\t\t\tcolor: ${color(`primary.500`)};\n\t\t\t\t`,\n\t\t\t)}\n\t\t`,\n\t\tsecondary: css`\n\t\t\tpadding: ${spacing(1)};\n\t\t\tfont-size: 16px;\n\t\t\tcolor: ${color(`content.secondary`)};\n\n\t\t\t// hover\n\t\t\t&:hover:not([disabled]) {\n\t\t\t\tbackground-color: ${color(`border.secondary`)};\n\t\t\t\tcolor: ${color(`content.primary`)};\n\t\t\t}\n\n\t\t\t// pressed\n\t\t\t&:active:not([disabled]),\n\t\t\t&:focus:active:not([disabled]) {\n\t\t\t\tbackground-color: ${color(`border.primary`)};\n\t\t\t\tcolor: ${color(`content.primary`)};\n\t\t\t}\n\n\t\t\t// focus\n\t\t\t&:focus:not([disabled]) {\n\t\t\t\tbackground-color: ${color(`surface.secondary`)};\n\t\t\t\tcolor: ${color(`content.primary`)};\n\t\t\t}\n\n\t\t\t// activated\n\t\t\t${modifier(\n\t\t\t\t'active',\n\t\t\t\tcss`\n\t\t\t\t\tbackground-color: ${color(`surface.secondary`)};\n\t\t\t\t\tcolor: ${color(`content.primary`)};\n\t\t\t\t`,\n\t\t\t)}\n\t\t`,\n\t\tverified: css`\n\t\t\tpadding: ${spacing(1)};\n\t\t\tfont-size: 16px;\n\t\t\tcolor: ${color(`content.secondary`)};\n\n\t\t\t// hover\n\t\t\t&:hover:not([disabled]) {\n\t\t\t\tbackground-color: ${color(`surface.yellow100`)};\n\t\t\t\tcolor: ${color(`content.primary`)};\n\t\t\t}\n\n\t\t\t// pressed\n\t\t\t&:active:not([disabled]),\n\t\t\t&:focus:active:not([disabled]) {\n\t\t\t\tbackground-color: ${color(`yellow.200`)};\n\t\t\t\tcolor: ${color(`content.primary`)};\n\t\t\t}\n\n\t\t\t// focus\n\t\t\t&:focus:not([disabled]) {\n\t\t\t\tbackground-color: ${color(`surface.yellow100`)};\n\t\t\t\tcolor: ${color(`content.primary`)};\n\t\t\t}\n\n\t\t\t// activated\n\t\t\t${modifier(\n\t\t\t\t'active',\n\t\t\t\tcss`\n\t\t\t\t\tbackground-color: ${color(`surface.yellow50`)};\n\t\t\t\t\tcolor: ${color(`content.primary`)};\n\t\t\t\t`,\n\t\t\t)}\n\t\t`,\n\t\treviewed: css`\n\t\t\tpadding: ${spacing(1)};\n\t\t\tfont-size: 16px;\n\t\t\tcolor: ${color(`content.secondary`)};\n\n\t\t\t// hover\n\t\t\t&:hover:not([disabled]) {\n\t\t\t\tbackground-color: ${color(`surface.green100`)};\n\t\t\t\tcolor: ${color(`content.primary`)};\n\t\t\t}\n\n\t\t\t// pressed\n\t\t\t&:active:not([disabled]),\n\t\t\t&:focus:active:not([disabled]) {\n\t\t\t\tbackground-color: ${color(`green.200`)};\n\t\t\t\tcolor: ${color(`content.primary`)};\n\t\t\t}\n\n\t\t\t// focus\n\t\t\t&:focus:not([disabled]) {\n\t\t\t\tbackground-color: ${color(`surface.green100`)};\n\t\t\t\tcolor: ${color(`content.primary`)};\n\t\t\t}\n\n\t\t\t// activated\n\t\t\t${modifier(\n\t\t\t\t'active',\n\t\t\t\tcss`\n\t\t\t\t\tbackground-color: ${color(`surface.green50`)};\n\t\t\t\t\tcolor: ${color(`content.primary`)};\n\t\t\t\t`,\n\t\t\t)}\n\t\t`,\n\t})}\n`;\n\nexport const Container = styled(Pressable)<IconButtonProps>`\n\tdisplay: inline-flex;\n\talign-items: center;\n\tbackground-color: transparent;\n\tcolor: ${color(`content.primary`)};\n\ttransition: background-color ${transitionTime()}, color ${transitionTime()};\n\tborder: 0;\n\tborder-radius: ${radius('md')};\n\ttext-decoration: none;\n\n\t${variantColorStyles}\n\n\t// disabled\n    &:disabled {\n\t\tcursor: not-allowed;\n\t\tcolor: ${color('interactive.primary.disabled')};\n\n\t\t${modifier(\n\t\t\t'isLoading',\n\t\t\tcss`\n\t\t\t\tcolor: initial;\n\t\t\t\tcursor: auto;\n\t\t\t\t${variantColorStyles}\n\t\t\t`,\n\t\t)}\n\t}\n`;\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { css, styled } from '../../utils/styled';\nimport {\n\tcolor,\n\texcludeProps,\n\tfontFamily,\n\tmodifier,\n\tradius,\n\tspacing,\n\ttransitionTime,\n\ttypography,\n\tzIndex,\n} from '../../utils/theme';\nimport { IconButton } from '../IconButton';\nimport type { IconButtonProps } from '../IconButton';\nimport type { PressableProps } from '../Pressable';\nimport { Pressable } from '../Pressable';\n\nexport const CloseIconButton = styled(IconButton)<IconButtonProps>`\n\topacity: 0;\n\ttransition: opacity 0.2s;\n`;\n\nexport const TypeIcon = styled.div.withConfig({\n\tshouldForwardProp: excludeProps(['type']),\n})`\n\tflex-basis: 16px;\n\tflex-shrink: 0;\n\tflex-grow: 0;\n\theight: 20px;\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nexport const Content = styled.div`\n\twidth: 100%;\n\tflex-shrink: 1;\n\tflex-grow: 1;\n\tdisplay: grid;\n\tgrid-template-columns: 1fr;\n\tgap: ${spacing(1)};\n`;\n\nexport const Title = styled.span`\n\t${typography('captionMedium')};\n\tdisplay: -webkit-box;\n\ttext-overflow: ellipsis;\n\t-webkit-line-clamp: 2;\n\t-webkit-box-orient: vertical;\n\tword-break: break-word;\n\toverflow: hidden;\n`;\n\nexport const Description = styled.span`\n\t${typography('caption2')};\n\tdisplay: block;\n`;\n\nexport const ToastAnchor = styled(Pressable)<PressableProps>`\n\t${typography('linkSmall')};\n\ttext-decoration: underline;\n\tcursor: pointer;\n\tcolor: ${color('content.primary')};\n\n\t${modifier(\n\t\t({ href }: PressableProps) => !href,\n\t\tcss`\n\t\t\tbackground-color: transparent;\n\t\t\tborder: none;\n\t\t\tfont-family: inherit;\n\t\t\tpadding: 0;\n\t\t`,\n\t)}\n\n\t&:hover {\n\t\topacity: 0.7;\n\t}\n\ttransition: opacity ${transitionTime()};\n`;\n\nexport const StyledToastContainer = styled(ToastContainer)`\n\ttransform: translate3d(0, 0, 9999px);\n\tposition: fixed;\n\tfont-family: inherit;\n\twidth: 332px;\n\tmin-height: 44px;\n\tbox-sizing: border-box;\n\tpadding: 0;\n\n\t--toastify-color-light: ${color('content.primary')};\n\t--toastify-color-dark: var(--toastify-color-light);\n\t--toastify-color-info: ${color('surface.primary50')};\n\t--toastify-color-success: ${color('surface.green50')};\n\t--toastify-color-warning: ${color('surface.yellow50')};\n\t--toastify-color-error: ${color('surface.red50')};\n\t//--toastify-color-transparent: rgba(255, 255, 255, 0.7);\n\n\t--toastify-icon-color-info: ${color('primary.600')};\n\t--toastify-icon-color-success: ${color('green.600')};\n\t--toastify-icon-color-warning: ${color('yellow.800')};\n\t--toastify-icon-color-error: ${color('red.600')};\n\n\t//--toastify-toast-width: 320px;\n\t//--toastify-toast-background: #fff;\n\t//--toastify-toast-min-height: 64px;\n\t//--toastify-toast-max-height: 800px;\n\t--toastify-font-family: ${fontFamily('default')};\n\t--toastify-z-index: ${zIndex('toast')};\n\n\t--toastify-text-color-light: ${color('content.primary')};\n\t--toastify-text-color-dark: var(--toastify-text-color-light);\n\n\t--toastify-text-color-info: var(--toastify-text-color-light);\n\t--toastify-text-color-success: var(--toastify-text-color-light);\n\t--toastify-text-color-warning: var(--toastify-text-color-light);\n\t--toastify-text-color-error: var(--toastify-text-color-light);\n\n\t//--toastify-spinner-color: #616161;\n\t//--toastify-spinner-color-empty-area: #e0e0e0;\n\n\t// Used when no type is provided\n\t// toast(\"**hello**\")\n\t//--toastify-color-progress-light: linear-gradient(to right, #4cd964, #5ac8fa, #007aff, #34aadc, #5856d6, #ff2d55);\n\t// Used when no type is provided\n\t--toastify-color-progress-dark: var(--toastify-color-progress-light);\n\t--toastify-color-progress-info: var(--toastify-icon-color-info);\n\t--toastify-color-progress-success: var(--toastify-icon-color-success);\n\t--toastify-color-progress-warning: var(--toastify-icon-color-warning);\n\t--toastify-color-progress-error: var(--toastify-icon-color-error);\n\n\t.Toastify__toast {\n\t\tbox-sizing: border-box;\n\t\tpadding: ${spacing(3, 2)};\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\talign-items: flex-start;\n\t\tcolor: ${color('content.primary')};\n\t\tbox-shadow: none;\n\t\tcursor: default;\n\t\tmin-height: 44px;\n\t\toverflow: hidden;\n\t\tborder-radius: ${radius('md')};\n\t\tmargin-bottom: ${spacing(2)};\n\n\t\t&:hover ${CloseIconButton} {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\n\t.Toastify__toast-icon {\n\t\tmargin: 0;\n\t}\n\n\t.Toastify__toast.Toastify__toast--success {\n\t\tbackground-color: var(--toastify-color-success);\n\n\t\t.Toastify__toast-icon {\n\t\t\tcolor: var(--toastify-icon-color-success);\n\t\t}\n\t}\n\n\t.Toastify__toast.Toastify__toast--error {\n\t\tbackground-color: var(--toastify-color-error);\n\n\t\t.Toastify__toast-icon {\n\t\t\tcolor: var(--toastify-icon-color-error);\n\t\t}\n\t}\n\n\t.Toastify__toast.Toastify__toast--warning {\n\t\tbackground-color: var(--toastify-color-warning);\n\n\t\t.Toastify__toast-icon {\n\t\t\tcolor: var(--toastify-icon-color-warning);\n\t\t}\n\t}\n\n\t.Toastify__toast.Toastify__toast--info {\n\t\tbackground-color: var(--toastify-color-info);\n\n\t\t.Toastify__toast-icon {\n\t\t\tcolor: var(--toastify-icon-color-info);\n\t\t}\n\t}\n\n\t.Toastify__toast-body {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\talign-items: flex-start;\n\t\tgap: ${spacing(2)};\n\t\tpadding: 0;\n\t}\n`;\n"],"names":[],"sourceRoot":""}