{"version":3,"file":"foundations-designTokens-space-stories-mdx.f1dfdafa.iframe.bundle.js","mappings":";;;;;AA0BA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AAEA;;;;AAKA;;AAGA;;AAEA;AAEA","sources":["webpack://@lokalise/louis/./src/foundations/designTokens/space.stories.mdx"],"sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport addons from '@storybook/addons';\nimport { NAVIGATE_URL } from '@storybook/core-events';\nimport { Meta, Story } from '@storybook/addon-docs';\nimport { themes, ThemeProvider, ensure } from '@storybook/theming';\nimport LinkTo from '@storybook/addon-links/react';\nimport { styled } from '../../utils/styled';\nimport { color, spacing as spacingHelper } from '../../utils/theme';\nimport { space } from './space';\nexport const Template = (args, context) => {\n  window.setTimeout(() => {\n    addons.getChannel().emit(NAVIGATE_URL, `?path=/docs/${context.id}`);\n  }, 0);\n  const colorTheme = context?.globals?.backgrounds?.value === '#2D2E30' ? 'dark' : 'light';\n  const StyledColorContainer = styled.div`\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 20px;\n\t\tpadding: 20px;\n\t\tbackground-color: ${context?.globals?.backgrounds?.value};\n\t\t&& * {\n\t\t\tcolor: ${colorTheme === 'dark' ? '#ffffff' : undefined};\n\t\t}\n\t`;\n  const ItemBlock = styled.div`\n\t\twidth: ${props => spacingHelper(props.space)};\n\t\theight: ${props => spacingHelper(props.space)};\n\t\toutline: 1px solid ${color('green.600')};\n\t\tbackground-color: ${color('green.200')};\n\t`;\n  const ItemWrapper = styled.div`\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 10px;\n\t`;\n  const StyledCode = styled.code`\n\t\tmin-width: 110px;\n\t`;\n  const StyledCodeValue = styled.code`\n\t\tmin-width: 60px;\n\t\tcolor: ${color('content.secondary')};\n\t`;\n  return <ThemeProvider theme={ensure(themes.light)} mdxType=\"ThemeProvider\">\n\t\t\t<StyledColorContainer mdxType=\"StyledColorContainer\">\n\t\t\t\t{Object.entries(space).flatMap(([key, value]) => <ItemWrapper key={key} mdxType=\"ItemWrapper\">\n\t\t\t\t\t\t<StyledCode mdxType=\"StyledCode\">spacing('{key}')</StyledCode>\n\t\t\t\t\t\t<StyledCodeValue mdxType=\"StyledCodeValue\">{value}</StyledCodeValue>\n\t\t\t\t\t\t<ItemBlock space={key} mdxType=\"ItemBlock\" />\n\t\t\t\t\t</ItemWrapper>)}\n\t\t\t</StyledColorContainer>\n\t\t</ThemeProvider>;\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst StyledColorContainer = makeShortcode(\"StyledColorContainer\");\nconst ItemWrapper = makeShortcode(\"ItemWrapper\");\nconst StyledCode = makeShortcode(\"StyledCode\");\nconst StyledCodeValue = makeShortcode(\"StyledCodeValue\");\nconst ItemBlock = makeShortcode(\"ItemBlock\");\nconst layoutProps = {\n  Template\n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Foundations/Design Tokens/Spacing\" parameters={{\n      viewMode: 'docs',\n      previewTabs: {\n        canvas: {\n          hidden: true\n        }\n      },\n      controls: {\n        disable: true\n      },\n      actions: {\n        disable: true\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"spacing\"\n    }}>{`Spacing`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#overview\"\n        }}>{`Overview`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#figma-design-file\"\n        }}>{`Figma Design File`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#spacing-options\"\n        }}>{`Spacing Options`}</a></li>\n    </ul>\n    <h2 id=\"overview\">Overview</h2>\n    <p>{`Refer to `}<LinkTo kind=\"Foundations/Theming/Theme Helpers\" mdxType=\"LinkTo\">{`Theme Helpers`}</LinkTo>{` for additional information on how to use spacing in components.`}</p>\n    <h3 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @lokalise/louis\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { spacing } from '@lokalise/louis';\n\nconst StyledBox = styled.div\\`\n    padding: \\${spacing(2)};\n\\`;\n`}</code></pre>\n    <h2 id=\"figma-design-file\">Figma Design File</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <a href=\"https://www.figma.com/file/zfCOLmZam4nrttG6IVzQyz/Louis?node-id=5398%3A24541\" target=\"_blank\">\n\tFigma Source File | Spacing\n        </a>\n      </li>\n    </ul>\n    <h2 id=\"spacing-options\">Spacing Options</h2>\n    <Story name=\"Spacing\" mdxType=\"Story\">{Template.bind({})}</Story>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const spacing = Template.bind({});\nspacing.storyName = 'Spacing';\nspacing.parameters = { storySource: { source: '(args, context) => {\\n  window.setTimeout(() => {\\n    addons.getChannel().emit(NAVIGATE_URL, `?path=/docs/${context.id}`);\\n  }, 0);\\n  const colorTheme = context?.globals?.backgrounds?.value === \\'#2D2E30\\' ? \\'dark\\' : \\'light\\';\\n  const StyledColorContainer = styled.div`\\n\t\tdisplay: flex;\\n\t\tflex-direction: column;\\n\t\tgap: 20px;\\n\t\tpadding: 20px;\\n\t\tbackground-color: ${context?.globals?.backgrounds?.value};\\n\t\t&& * {\\n\t\t\tcolor: ${colorTheme === \\'dark\\' ? \\'#ffffff\\' : undefined};\\n\t\t}\\n\t`;\\n  const ItemBlock = styled.div`\\n\t\twidth: ${props => spacingHelper(props.space)};\\n\t\theight: ${props => spacingHelper(props.space)};\\n\t\toutline: 1px solid ${color(\\'green.600\\')};\\n\t\tbackground-color: ${color(\\'green.200\\')};\\n\t`;\\n  const ItemWrapper = styled.div`\\n\t\tdisplay: flex;\\n\t\talign-items: center;\\n\t\tgap: 10px;\\n\t`;\\n  const StyledCode = styled.code`\\n\t\tmin-width: 110px;\\n\t`;\\n  const StyledCodeValue = styled.code`\\n\t\tmin-width: 60px;\\n\t\tcolor: ${color(\\'content.secondary\\')};\\n\t`;\\n  return <ThemeProvider theme={ensure(themes.light)}>\\n\t\t\t<StyledColorContainer>\\n\t\t\t\t{Object.entries(space).flatMap(([key, value]) => <ItemWrapper key={key}>\\n\t\t\t\t\t\t<StyledCode>spacing(\\'{key}\\')</StyledCode>\\n\t\t\t\t\t\t<StyledCodeValue>{value}</StyledCodeValue>\\n\t\t\t\t\t\t<ItemBlock space={key} />\\n\t\t\t\t\t</ItemWrapper>)}\\n\t\t\t</StyledColorContainer>\\n\t\t</ThemeProvider>;\\n}' } };\n\nconst componentMeta = { title: 'Foundations/Design Tokens/Spacing', parameters: {\n  viewMode: 'docs',\n  previewTabs: {\n    canvas: {\n      hidden: true\n    }\n  },\n  controls: {\n    disable: true\n  },\n  actions: {\n    disable: true\n  }\n}, includeStories: [\"spacing\"],  };\n\nconst mdxStoryNameToKey = {\"Spacing\":\"spacing\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;"],"names":[],"sourceRoot":""}